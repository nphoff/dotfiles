" Vundle.
" Reminder, before having vundle, you need to run this:
" git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim
" Might want a script at some point to do that first
"
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'
Plugin 'derekwyatt/vim-scala'
Plugin 'tpope/vim-fugitive'
Plugin 'bling/vim-airline'
Plugin 'scrooloose/nerdtree'
Plugin 'pangloss/vim-javascript'
Plugin 'mxw/vim-jsx'
" webapi required for hound.vim
Plugin 'mattn/webapi-vim'
Plugin 'urthbound/hound.vim'
Plugin 'kien/ctrlp.vim'
Plugin 'fatih/vim-go'
Plugin 'altercation/vim-colors-solarized'
Plugin 'airblade/vim-rooter'
Plugin 'moll/vim-node'
Plugin 'mileszs/ack.vim'
"

 " All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" plug
call plug#begin()
" Plugin outside ~/.vim/plugged with post-update hook
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/goyo.vim'
call plug#end()

" allow fzf to find hidden files and ignore the tmp and git directories :D
let $FZF_DEFAULT_COMMAND='ag --ignore .git,tmp -g ""'

"" goyo
nnoremap <Leader>g :Goyo<CR>
"" automatically get into Goyo mode when editing my journal
autocmd BufNewFile,BufReadPost journal.md set bg=light
autocmd BufNewFile,BufReadPost journal.md Goyo

" requires fzf to be installed on the system (highly recommended)
" set rtp (assumes linux, not mac, mac will use another install directory)
set rtp+=~/.fzf
noremap <Leader>e :FZF <CR>
noremap <Leader>f :FZF <CR>

"" other plugins
nnoremap <Leader>o :CtrlP<CR>
nnoremap <Leader>c :TCommentBlock<CR>

nnoremap <Leader>g :Goyo<CR>

"" Hound.vim (<3)
nnoremap <Leader>h :Hound <C-R><C-W><CR>

let g:hound_vertical_split = 1

"" ctrlp
let g:ctrlp_max_depth = 40
let g:ctrlp_max_files = 0
let g:ctrlp_use_caching = 1
let g:ctrlp_clear_cache_on_exit = 0

"" nerdtree
map <C-n> :NERDTreeToggle<CR>

